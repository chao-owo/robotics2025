<?xml version="1.0"?>

<robot name="robotarm" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.14159265"/>
  <xacro:property name="PI_half" value="1.57079632"/>
  <xacro:property name="link0_mass" value="3"/>

  <!--adjusted size of link to approximate the inertia with rectangular shape-->
  <xacro:property name="link0_x" value="0.15"/>
  <xacro:property name="link0_y" value="0.2"/>
  <xacro:property name="link0_z" value="0.06"/>
  
  <xacro:property name="link1_mass" value="0.8"/>
  <xacro:property name="link1_x" value="0.11"/>
  <xacro:property name="link1_y" value="0.05"/>
  <xacro:property name="link1_z" value="0.08"/>

  <xacro:property name="link2_mass" value="0.405"/>
  <xacro:property name="link2_x" value="0.04"/>
  <xacro:property name="link2_y" value="0.05"/>
  <xacro:property name="link2_z" value="0.17"/>

  <xacro:property name="link3_mass" value="0.2"/>
  <xacro:property name="link3_x" value="0.02"/>
  <xacro:property name="link3_y" value="0.04"/>
  <xacro:property name="link3_z" value="0.17"/>

  <xacro:property name="link4_mass" value="0.01"/>
  <xacro:property name="link4_x" value="0.03"/>
  <xacro:property name="link4_y" value="0.01"/>
  <xacro:property name="link4_z" value="0.06"/>


  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <!-- To run Gazebo sumulation(plugins,color in Gazebo...), this is needed -->
  <!--just written in another XML named "myrobot.gazebo", can put content together here-->
  <xacro:include filename="$(find myrobot_description)/urdf/myrobot.gazebo" />

  <!-- Import Rviz colors -->
  <xacro:include filename="$(find myrobot_description)/urdf/materials.xacro" />


<!--fixing robot to Gazebo origin-->
  <link name="world"/>

  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="link0"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

<!--Base link of robot arm-->
  <link name="link0">

     <visual>
       <origin xyz="-0.037 0 0" rpy="0 0 ${PI/2}"/>
       <geometry>
        <mesh filename="package://myrobot_description/meshes/link0_fake_longer.stl" scale="0.001 0.001 0.001"/>
       </geometry>
       <material name="orange"/>
     </visual>

     <collision>
       <origin xyz="-0.037 0 0" rpy="0 0 ${PI_half}"/>
       <geometry>
        <mesh filename="package://myrobot_description/meshes/link0_fake_longer.stl" scale="0.001 0.001 0.001"/> 
       </geometry>
     </collision>
     
     <inertial>
        <origin xyz="-0.037 0 ${0.06/2}" rpy="0 0 ${PI_half}"/>
       <mass value="${link0_mass}"/>
       <inertia 
          ixx="${link0_mass / 12.0 * (link0_y*link0_y + link0_z*link0_z)}" 
          ixy="0.0" 
          ixz="0.0"
          iyy="${link0_mass / 12.0 * (link0_x*link0_x + link0_z*link0_z)}" 
          iyz="0.0"
          izz="${link0_mass / 12.0 * (link0_x*link0_x + link0_y*link0_y)}"/>
     </inertial>
   </link>

   <!--joint1-->
  <joint name="joint1" type="revolute">
    <parent link="link0"/>
    <child link="link1"/>
    <origin xyz="0 0 0.06" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="1.0" friction="1.33136"/>
    <limit effort="3.36343" lower="-1.2" upper="1.2" velocity="2.71224"/>
  </joint>


 <!--rotational base-->
  <link name="link1">
<!-- origin of link1 is joint 1 -->

    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI_half}"/>
      <geometry>
        <mesh filename="package://myrobot_description/meshes/link1.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${0.032/2}" rpy="0 0 ${PI_half}"/>
      <geometry>
      <box size="0.03 0.03 0.032"/>
      </geometry>
    </collision>
    
    <collision>
      <origin xyz="0 0 ${0.032+0.05/2}" rpy="0 0 ${PI_half}"/>
      <geometry>
      <box size="0.19 0.03 0.05"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 ${0.082/2}" rpy="0 0 ${PI_half}"/>
      <mass value="${link1_mass}"/>
      <inertia
          ixx="${link1_mass / 12.0 * (link1_y*link1_y + link1_z*link1_z)}" 
          ixy="0.0" 
          ixz="0.0"
          iyy="${link1_mass / 12.0 * (link1_x*link1_x + link1_z*link1_z)}" 
          iyz="0.0"
          izz="${link1_mass / 12.0 * (link1_x*link1_x + link1_y*link1_y)}"/>
    </inertial>
  </link>

  <!--joint2-->
  <joint name="joint2" type="revolute">
     <parent link="link1"/>
     <child link="link2"/>
     <origin xyz="0 0 0.082" rpy="0 0 0"/>
     <axis xyz="0 1 0"/>
     <dynamics damping="1.0" friction="2.329875"/>
     <limit effort="5.886" lower="-2" upper="2" velocity="1.54985"/>
   </joint>

<!--link2-->
<link name="link2">
    
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI_half}"/>
      <geometry>
        <mesh filename="package://myrobot_description/meshes/link2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${0.132/2}" rpy="0 0 ${PI_half}"/>
      <geometry>
        <box size="0.05 0.05 0.132"/>
      </geometry>
    </collision>

    <inertial>
     <origin xyz="0 0 ${0.132/2}" rpy="0 0 ${PI_half}"/>
      <mass value="${link2_mass}"/>
      <inertia
          ixx="${link2_mass / 12.0 * (link2_z*link2_z + link2_y*link2_y)}" 
          ixy="0.0" 
          ixz="0.0"
          iyy="${link2_mass / 12.0 * (link2_z*link2_z + link2_x*link2_x)}" 
          iyz="0.0"
          izz="${link2_mass / 12.0 * (link2_x*link2_x + link2_y*link2_y)}"/>
    </inertial>
  </link>

  <!--joint3-->
<joint name="joint3" type="revolute">
     <parent link="link2"/>
     <child link="link3"/>
     <origin xyz="0 0 0.132" rpy="0 0 0"/>
     <axis xyz="0 1 0"/>
     <dynamics damping="1.0" friction="1.176032"/>
     <limit effort="4.20429" lower="-1.67" upper="1.67" velocity="2.75622"/>
   </joint>

<!--link3-->
<link name="link3">

    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI_half}"/>
      <geometry>
        <mesh filename="package://myrobot_description/meshes/link3.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${0.1664/2}" rpy="0 0 ${PI_half}"/>
      <geometry>
        <box size="0.04 0.04 0.1664"/>
      </geometry>
    </collision>

    <inertial>
     <origin xyz="0 0 ${0.1664/2}" rpy="0 0 ${PI_half}"/>
      <mass value="${link3_mass}"/>
      <inertia
          ixx="${link3_mass / 12.0 * (link3_z*link3_z + link3_y*link3_y)}" 
          ixy="0.0" 
          ixz="0.0"
          iyy="${link3_mass / 12.0 * (link3_z*link3_z + link3_x*link3_x)}" 
          iyz="0.0"
          izz="${link3_mass / 12.0 * (link3_x*link3_x + link3_y*link3_y)}"/>
    </inertial>
  </link>

<!--joint4-->
   <joint name="joint4" type="revolute">
     <parent link="link3"/>
     <child link="link4"/>
     <origin xyz="0 0 0.1664" rpy="0 0 0"/>
     <axis xyz="0 1 0"/>
     <dynamics damping="1.0" friction="0.07"/>
     <limit effort="0.1962" lower="${-PI_half}" upper="${PI_half}" velocity="10.47198"/>
   </joint>

  <!--link4-->
  <link name="link4">

    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI_half}"/>
      <geometry>
        <mesh filename="package://myrobot_description/meshes/link4.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 ${PI_half}"/>
      <geometry>
        <mesh filename="package://myrobot_description/meshes/link4.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>

    <inertial>
     <origin xyz="0 0 ${0.06/2}" rpy="0 0 ${PI_half}"/>
      <mass value="${link4_mass}"/>
      <inertia
          ixx="${link4_mass / 12.0 * (link4_z*link4_z + link4_y*link4_y)}" 
          ixy="0.0" 
          ixz="0.0"
          iyy="${link4_mass / 12.0 * (link4_z*link4_z + link4_x*link4_x)}" 
          iyz="0.0"
          izz="${link4_mass / 12.0 * (link4_x*link4_x + link4_y*link4_y)}"/>
    </inertial>
  </link>

  <!--joint5-->
   <joint name="joint5" type="fixed">
     <parent link="link4"/>
     <child link="link5"/>
     <origin xyz="0.004 0 0.048" rpy="0 0 0"/>
   </joint>

  <!--link5-->
  <link name="link5">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="orange"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    
    <inertial>
      <mass value="0.001"/>
      <inertia
        ixx="0.0001" ixy="0" ixz="0"
        iyy="0.0001" iyz="0"
        izz="0.0001"/>
    </inertial>
  </link>

<!-- Add a robot_state_publisher -->
<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/robotarm</robotNamespace>
    <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
  </plugin>
</gazebo>

<transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

<transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

<transmission name="tran3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


<transmission name="tran4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>  

</robot>
